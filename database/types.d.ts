/**
 * This file was generated by kysely-codegen.
 * Please do not edit it manually.
 */

import type { ColumnType } from "kysely";

export type Generated<T> = T extends ColumnType<infer S, infer I, infer U>
  ? ColumnType<S, I | undefined, U>
  : ColumnType<T, T | undefined, T>;

export type Timestamp = ColumnType<Date, Date | string, Date | string>;

export interface Draws {
  createdAt: Timestamp;
  id: Generated<number>;
  name: string;
  pin: string;
  updatedAt: Timestamp;
}

export interface Participants {
  drawId: number;
  id: Generated<number>;
  name: string;
  pin: string;
  visits: Generated<number>;
}

export interface Rules {
  drawId: number;
  id: Generated<number>;
  participantId: number;
  targetId: number;
}

export interface Tickets {
  drawId: number;
  drawnParticipantId: number;
  id: Generated<number>;
  participantId: number;
}

export interface DB {
  draws: Draws;
  participants: Participants;
  rules: Rules;
  tickets: Tickets;
}
